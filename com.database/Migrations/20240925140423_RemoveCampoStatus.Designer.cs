// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using com.database;

#nullable disable

namespace com.database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240925140423_RemoveCampoStatus")]
    partial class RemoveCampoStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("com.database.entities.TokenBounty", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("id_usuario")
                        .HasColumnType("integer");

                    b.Property<decimal>("valor_reserva_total")
                        .HasColumnType("numeric");

                    b.Property<decimal>("valor_reservado")
                        .HasColumnType("numeric");

                    b.HasKey("id");

                    b.HasIndex("id_usuario")
                        .IsUnique();

                    b.ToTable("tokenbounties", (string)null);
                });

            modelBuilder.Entity("com.database.entities.TokenPool", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<decimal>("divisor")
                        .HasColumnType("numeric");

                    b.Property<int>("tick_speed")
                        .HasColumnType("integer");

                    b.Property<decimal>("total")
                        .HasColumnType("numeric");

                    b.HasKey("id");

                    b.ToTable("tokenpool");
                });

            modelBuilder.Entity("com.database.entities.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("confirmation_code_alphanumber")
                        .HasColumnType("text");

                    b.Property<string>("confirmation_code_number")
                        .HasColumnType("text");

                    b.Property<bool?>("confirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<DateTime?>("expiration_date_invitations")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("invitations_available")
                        .HasColumnType("integer");

                    b.Property<string>("invite_code")
                        .HasColumnType("text");

                    b.Property<string>("invited_by")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("phone_number")
                        .HasColumnType("text");

                    b.Property<string>("stake_address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("wallet_address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("stake_address")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("com.database.entities.TokenBounty", b =>
                {
                    b.HasOne("com.database.entities.User", "User")
                        .WithOne("TokenBounty")
                        .HasForeignKey("com.database.entities.TokenBounty", "id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("com.database.entities.User", b =>
                {
                    b.Navigation("TokenBounty")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
